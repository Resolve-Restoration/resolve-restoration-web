name: Deploy Hugo site to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.123.4 # Latest stable version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Correct reference to checkout action
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4 # Latest version of this action

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-artifact@v3 # Correct reference to upload-artifact action
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Ensure we are using the latest version of checkout
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }} # Using GH_TOKEN for authentication

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3 # Correct reference to peaceiris action
        with:
          github_token: ${{ secrets.GH_TOKEN }} # Using GH_TOKEN for deployment
          publish_dir: ./public
